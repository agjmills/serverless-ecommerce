service: serverless-ecommerce-api

frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  region: ${env:REGION}
  stage: ${opt:stage, 'test'}
  iam:
    role:
      statements:
        - Effect: Allow
          Resource:
            - Fn::GetAtt: [categoryTable, Arn]
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem

functions:
  adminCategoryCreate:
    handler: http.handlers.administration.categories.create
    events:
      - httpApi:
          path: /administration/category
          method: POST


resources:
  Resources:
    categoryTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-${self:service}-categories
      AttributeDefinitions:
        - AttributeName: name
          AttributeType: S
      KeySchema:
        - AttributeName: name
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

custom:
  pythonRequirements:
    dockerizePip: non-linux
  dynamodb:
    start:
      migrate: true
    stages:
      - dev
      - test

package:
  patterns:
    - '!node_modules/**'
    - '!.venv/**'
    - '!.pytest_cache/**'


plugins:
  - serverless-python-requirements
  - serverless-dynamodb-local
  - serverless-offline
  
